apiVersion: v1
kind: Namespace
metadata:
  name: <%= ENV['PERSON'] %>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: <%= ENV['PERSON'] %>-sa
  namespace: <%= ENV['PERSON'] %>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: <%= ENV['PERSON'] %>-role
  namespace: <%= ENV['PERSON'] %>
rules:
- apiGroups: ["*"]
  resources: ["pipelineruns", "deployments", "configmaps", "statefulsets", "services"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: <%= ENV['PERSON'] %>-role-binding
  namespace: <%= ENV['PERSON'] %>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: <%= ENV['PERSON'] %>-role
subjects:
  - kind: ServiceAccount
    name: <%= ENV['PERSON'] %>-sa
    namespace: <%= ENV['PERSON'] %>
---
apiVersion: v1
kind: Service
metadata:
  name: <%= ENV['PERSON'] %>-ide-svc
  namespace: <%= ENV['PERSON'] %>
  annotations:
    external-dns.alpha.kubernetes.io/hostname: <%= ENV['PERSON'] %>.<%= ENV['DOMAIN'] %>
  labels:
    for: <%= ENV['PERSON'] %>
spec:
  type: NodePort
  selector:
    for: <%= ENV['PERSON'] %>
    app_type: ide
  ports:
    - port: 22
      name: ssh
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: <%= ENV['PERSON'] %>-ide-ss
  namespace: <%= ENV['PERSON'] %>
  labels:
    for: <%= ENV['PERSON'] %>
    app_type: ide
spec:
  selector:
    matchLabels:
      for: <%= ENV['PERSON'] %>
      app_type: ide
  serviceName: <%= ENV['PERSON'] %>-cloud-dev
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        for: <%= ENV['PERSON'] %>
        app_type: ide
    spec:
      serviceAccountName: <%= ENV['PERSON'] %>-sa
      terminationGracePeriodSeconds: 10
      containers:
        - name: ide
          image: <%= ENV['IDE_IMAGE'] %>
          imagePullPolicy: Always
          env:
            - name: PERSON_PUBLIC_KEY_URL
              value: <%= ENV['PERSON_PUBLIC_KEY_URL'] %>
          ports:
            - containerPort: 22
              name: ssh-port
          resources:
            requests:
              cpu: 500m
              memory: 3Gi
          startupProbe:
            tcpSocket:
              port: ssh-port
            failureThreshold: 12
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: ssh-port
            failureThreshold: 2
            periodSeconds: 5
          volumeMounts:
            - name: data-storage
              mountPath: /root/work
  volumeClaimTemplates:
    - metadata:
        name: data-storage
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp3-delete
        resources:
          requests:
            storage: <%= ENV['STORAGE_SIZE'] %>
