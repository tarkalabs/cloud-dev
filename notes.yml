Installation Notes:
  - eksctl cli installation (https://docs.aws.amazon.com/eks/latest/userguide/eksctl.html)
    - brew install eksctl
  - create a ssh key pair in aws
    - aws ec2 create-key-pair --key-name cloud-dev --key-type rsa --key-format pem --query "KeyMaterial" --output text > cloud-dev.pem
    - chmod 400 cloud-dev.pem
    - ssh-keygen -y -f cloud-dev.pem > cloud-dev.pub
  - Creating EKS cluster
    - eksctl create cluster -f cluster-config.yml --profile tarkalabs --dry-run
  - Updated kube context in local
    - awst => aws --profile tarkalabs
    - awst eks update-kubeconfig --region us-east-1 --name cloud-dev
    - kubectl config rename-context arn:aws:eks:us-east-1:260741046218:cluster/cloud-dev cloud-dev
    - kubectl config use-context cloud-dev
    - kubectl config delete-context cloud-dev

  - Applied Tekton pipeline yaml
    - kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
  - Updated Tekton default config
    - https://tekton.dev/docs/installation/pipelines/#customizing-basic-execution-parameters
    - Updated config is in file ./tekton-config-default.yml
    - kubectl apply -f tekton-config-default.yml

  - installing metrics server
    - kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

  - external-dns setup
    - aws iam create-policy --policy-name "AllowExternalDNSUpdates" --policy-document file://external-dns/iam_policy.json --profile tarkalabs
    - export POLICY_ARN=$(aws iam list-policies --query 'Policies[?PolicyName==`AllowExternalDNSUpdates`].Arn' --output text)
    - aws iam create-user --user-name "externaldns" --profile tarkalabs
    - aws iam attach-user-policy --user-name "externaldns" --policy-arn $POLICY_ARN --profile tarkalabs
    - eksctl utils associate-iam-oidc-provider --cluster cloud-dev --region us-east-1 --profile tarkalabs --approve
    - eksctl create iamserviceaccount --cluster cloud-dev --name "external-dns" --namespace kube-system --attach-policy-arn $POLICY_ARN --profile tarkalabs --approve
    - DOMAIN=dev.klstr.io erb external-dns/external-dns.yml.erb > output/external-dns.yml
    - kubectl apply -f output/external-dns.yml

  - creating a global storage class for all data storage needs
    - kubectl apply -f storage-classes.yml

  - ide deployment k8s yaml with pipelines
    - kubectl create ns devops
    - kubectl apply -n devops -f tekton/tekton-sa-role-bindings.yml
    - kubectl apply -n devops -f tekton/hub-tasks/
    - tkn hub install task git-clone --version 0.6
    - kubectl apply -n devops -f tekton/resources/

    - PERSON=madhav-tarkalabs ACTION=apply INFRA_REPO_REVISION=dev erb tekton/create-env-pipeline-run.yml.erb > output/create-env-pipeline-run.yml
    - kubectl create -f output/create-env-pipeline-run.yml
    - tkn pipeline logs -n devops

  - ide deployment k8s yaml
    - DOMAIN=dev.klstr.io PERSON="madhav-tarkalabs" DISK_SIZE="1Gi" IDE_IMAGE="260741046218.dkr.ecr.us-east-1.amazonaws.com/cloud-dev:ubuntu-22.04-tilt-v1" SSL_CERT_ARN="arn:aws:acm:us-east-1:260741046218:certificate/60cf073f-822d-41b8-a7ac-238537448187" erb ide-deployment.yml.erb > output/ide-deployment.yml
    - kubectl apply -f output/ide-deployment.yml
    - create /data directory in the node





  - Created an IAM role for eks managed node group
    - https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html
  - Created an eks fargate IAM role for ci cd tasks
    - https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html



https://docs.aws.amazon.com/eks/latest/userguide/view-kubernetes-resources.html#view-kubernetes-resources-permissions

eksctl create iamidentitymapping \
    --cluster cloud-dev \
    --region=us-east-1 \
    --arn arn:aws:iam::260741046218:user/Madhava \
    --group eks-console-dashboard-restricted-access-group \
    --no-duplicate-arns

eksctl create fargateprofile -f cluster-config.yml --profile tarkalabs
eksctl create nodegroup -f cluster-config.yml --profile tarkalabs

kubectl run --port=22 madhav-cloud-dev --image=260741046218.dkr.ecr.us-east-1.amazonaws.com/cloud-dev:ubuntu-22.04-tilt-v1

kubectl port-forward --address 0.0.0.0 pod/madhav-cloud-dev 2222:22

kubectl get svc -n madhav-tarkalabs madhav-tarkalabs-ide-svc -o jsonpath={.spec..ports..nodePort}

ctr --namespace k8s.io containers ls
alias ctr="ctr --namespace k8s.io"

kubectl create secret -n kube-system external-dns

eksctl create iamserviceaccount \
  --name ebs-csi-controller-sa \
  --namespace kube-system \
  --cluster cloud-dev \
  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
  --approve \
  --role-only \
  --role-name AmazonEKS_EBS_CSI_DriverRole \
  --profile tarkalabs

eksctl create addon --name aws-ebs-csi-driver --version v1.14.0-eksbuild.1 --cluster cloud-dev --service-account-role-arn arn:aws:iam::260741046218:role/AmazonEKS_EBS_CSI_DriverRole --profile tarkalabs
